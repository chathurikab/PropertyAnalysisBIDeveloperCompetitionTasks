 private HttpClient client = new HttpClient();


public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {

            HttpResponseMessage response = client.GetAsync($"https://maps.googleapis.com/maps/api/geocode/json?latlng={Row.LatitudeStr.Trim()},{Row.LongitudeStr.Trim()}&key=AIzaSyB_4lIINmxszcv9iuWIMV094iBV87CU9kw").Result;

            if (response.IsSuccessStatusCode)
            {

                var jsonString = response.Content.ReadAsStringAsync().Result;
                Rootobject rootObject = JsonConvert.DeserializeObject<Rootobject>(jsonString);
                var result = rootObject.results[1];

                if (result != null)
                {
                    Row.OutStreetNo = result.address_components.Where(c => c.types.Contains("street_number")).FirstOrDefault()?.short_name; 
                    Row.OutStreetName = result.address_components.Where(c => c.types.Contains("route")).FirstOrDefault()?.long_name; 
                    Row.OutSuburb = result.address_components.Where(c => c.types.Contains("locality")).FirstOrDefault()?.long_name;
                    Row.OutPostCode = result.address_components.Where(c => c.types.Contains("postal_code")).FirstOrDefault()?.long_name;
                    Row.OutStateName = result.address_components.Where(c => c.types.Contains("administrative_area_level_1")).FirstOrDefault()?.long_name;
                    Row.OutCountryName = result.address_components.Where(c => c.types.Contains("country")).FirstOrDefault()?.long_name;
                }

            }

        }

        catch (Exception ex)
        { 
        
        }
    }

     public class GoogleGeoCode
    {
        public class Rootobject
        {
            public Result[] results { get; set; }
        }

        public class Plus_Code
        {
            public string compound_code { get; set; }
            public string global_code { get; set; }
        }

        public class Result
        {
            public Address_Components[] address_components { get; set; }
            public string formatted_address { get; set; }
            public string[] postcode_localities { get; set; }
        }
        public class Address_Components
        {
            public string long_name { get; set; }
            public string short_name { get; set; }
            public string[] types { get; set; }
        }

    }