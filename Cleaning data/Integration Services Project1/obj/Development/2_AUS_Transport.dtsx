<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/15/2020 12:18:34 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CHATHU-LAPTOP"
  DTS:CreatorName="CHATHU-LAPTOP\Chanuth"
  DTS:DTSID="{D3EC1E2B-AB69-4106-8DB8-C843EF4A9701}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.93"
  DTS:LocaleID="5129"
  DTS:ObjectName="2_AUS_Transport"
  DTS:PackageType="5"
  DTS:VersionBuild="60"
  DTS:VersionGUID="{29BC1916-698C-44E7-AD60-64F6D3DF6330}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{936EE9D7-8ACA-41A7-939F-E47D9CFE4EC9}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Source\Property Analysis BI Developer Competition Tasks\Raw Dataset\Australia Dataset\Formatted\NSW_StationEntrances_Sydney 2018.csv.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Task1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EBD2223A-608E-4FF7-BE95-6EDD7FBEB089}"
      DTS:ObjectName="LocalHost.Task1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=Task1;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.Task1_Warehouse]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C9585C49-A4E7-453C-9D93-3F456C71DB99}"
      DTS:ObjectName="LocalHost.Task1_Warehouse">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=Task1_Warehouse;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\2_AUS_Transport"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C942EFE8-ACD3-4962-BCC8-B4D3D1C5A486}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="2_AUS_Transport">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\2_AUS_Transport\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{49FA38BB-882E-4D0B-B639-4F33FDDFDBAB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; Â© 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F93B2DB2-7039-4FFF-9CCB-AFF9C2E22834}"
              SQLTask:SqlStatementSource="delete AUS_Stations" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\2_AUS_Transport\Load to DW"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6C4B6687-BD87-4DBB-B887-4C7FEF839C9F}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load to DW"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\2_AUS_Transport\Load to DW\Define Country"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Define Country"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\Load to DW\Define Country.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\Define Country.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output].Columns[Country]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Australia"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Australia"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\Define Country.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup for new Transport entries"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DimTransport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DimTransport]) [refTable]
where [refTable].[Suburb] = ? and [refTable].[EntranceType] = ? and [refTable].[StopId] = ? and [refTable].[PostCode] = ? and [refTable].[Country] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="TransportId" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StopId" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StreetNumber" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StreetName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Suburb" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PostCode" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="State" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Country" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EntranceType" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Latitude" dataType="DT_NUMERIC" length="0" precision="8" scale="6" codePage="0"/&gt;&lt;referenceColumn name="Longitude" dataType="DT_NUMERIC" length="0" precision="9" scale="6" codePage="0"/&gt;&lt;referenceColumn name="ExitNumber" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[Suburb]};#{Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceType]};#{Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StopID]};#{Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[PostCode]};#{Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output].Columns[Country]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.Task1_Warehouse]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.Task1_Warehouse]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input].Columns[Suburb]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Suburb"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[Suburb]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Suburb</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input].Columns[EntranceType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EntranceType"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceType]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EntranceType</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input].Columns[StopID]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="StopID"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StopID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">StopId</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input].Columns[PostCode]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="PostCode"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[PostCode]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">PostCode</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input].Columns[Country]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="Country"
                          lineageId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output].Columns[Country]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Country</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Match Output].Columns[StopId]"
                          dataType="wstr"
                          errorOrTruncationOperation="Copy Column"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Match Output].Columns[StopId]"
                          name="StopId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">StopId</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[DimTransport]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.Task1_Warehouse]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.Task1_Warehouse]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Suburb]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Suburb"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suburb]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[Suburb]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StreetName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="StreetName"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetName]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetName]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EntranceType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EntranceType"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceType]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceType]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ExitNumber]"
                          cachedDataType="i4"
                          cachedName="ExitNumber"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExitNumber]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[ExitNumber]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StopID]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="StopID"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StopId]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StopID]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StreetNumber]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="StreetNumber"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetNumber]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetNumber]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PostCode]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="PostCode"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostCode]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[PostCode]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="State"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[State]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EntranceLatitude]"
                          cachedDataType="numeric"
                          cachedName="EntranceLatitude"
                          cachedPrecision="8"
                          cachedScale="6"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLatitude]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EntranceLongitude]"
                          cachedDataType="numeric"
                          cachedName="EntranceLongitude"
                          cachedPrecision="9"
                          cachedScale="6"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLongitude]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Country]"
                          cachedDataType="wstr"
                          cachedLength="9"
                          cachedName="Country"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output].Columns[Country]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StationName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="StationName"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StationName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetName]"
                          dataType="wstr"
                          length="100"
                          name="StreetName" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceType]"
                          dataType="wstr"
                          length="100"
                          name="EntranceType" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExitNumber]"
                          dataType="i4"
                          name="ExitNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StopId]"
                          dataType="wstr"
                          length="10"
                          name="StopId" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetNumber]"
                          dataType="wstr"
                          length="10"
                          name="StreetNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suburb]"
                          dataType="wstr"
                          length="100"
                          name="Suburb" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostCode]"
                          dataType="wstr"
                          length="10"
                          name="PostCode" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="100"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Latitude]"
                          dataType="numeric"
                          name="Latitude"
                          precision="8"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Longitude]"
                          dataType="numeric"
                          name="Longitude"
                          precision="9"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          dataType="wstr"
                          length="100"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          dataType="wstr"
                          length="100"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TransportId]"
                          dataType="i4"
                          name="TransportId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\Load to DW\Staging DB"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Staging DB"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AUS_Stations]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\2_AUS_Transport\Load to DW\Staging DB.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.Task1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.Task1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[Suburb]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[Suburb]"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[Suburb]"
                          name="Suburb"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StreetName]"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetName]"
                          name="StreetName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceType]"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceType]"
                          name="EntranceType"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLatitude]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceLatitude]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLatitude]"
                          name="EntranceLatitude"
                          precision="8"
                          scale="6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLongitude]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceLongitude]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[EntranceLongitude]"
                          name="EntranceLongitude"
                          precision="9"
                          scale="6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[ExitNumber]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[ExitNumber]"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[ExitNumber]"
                          name="ExitNumber"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StopID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StopID]"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StopID]"
                          name="StopID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StationName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StationName]"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StationName]"
                          name="StationName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetNumber]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StreetNumber]"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[StreetNumber]"
                          name="StreetNumber"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[PostCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[PostCode]"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[PostCode]"
                          name="PostCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[State]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[State]"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[Suburb]"
                          dataType="wstr"
                          length="100"
                          name="Suburb" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StreetName]"
                          dataType="wstr"
                          length="100"
                          name="StreetName" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceType]"
                          dataType="wstr"
                          length="100"
                          name="EntranceType" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceLatitude]"
                          dataType="numeric"
                          name="EntranceLatitude"
                          precision="8"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[EntranceLongitude]"
                          dataType="numeric"
                          name="EntranceLongitude"
                          precision="9"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[ExitNumber]"
                          dataType="i4"
                          name="ExitNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StopID]"
                          dataType="wstr"
                          length="10"
                          name="StopID" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StationName]"
                          dataType="wstr"
                          length="100"
                          name="StationName" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[StreetNumber]"
                          dataType="wstr"
                          length="10"
                          name="StreetNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[PostCode]"
                          dataType="wstr"
                          length="10"
                          name="PostCode" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output].ExternalColumns[State]"
                          dataType="wstr"
                          length="100"
                          name="State" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StationName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StationName]"
                          name="StationName" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StreetNumber]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StreetNumber]"
                          name="StreetNumber" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[Suburb]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[Suburb]"
                          name="Suburb" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StreetName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StreetName]"
                          name="StreetName" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[PostCode]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[PostCode]"
                          name="PostCode" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[State]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceType]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceType]"
                          name="EntranceType" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceLatitude]"
                          dataType="numeric"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceLatitude]"
                          name="EntranceLatitude"
                          precision="8"
                          scale="6" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceLongitude]"
                          dataType="numeric"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[EntranceLongitude]"
                          name="EntranceLongitude"
                          precision="9"
                          scale="6" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ExitNumber]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ExitNumber]"
                          name="ExitNumber" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StopID]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[StopID]"
                          name="StopID" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\2_AUS_Transport\Load to DW.Paths[Derived Column Output]"
                  endId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Inputs[Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\2_AUS_Transport\Load to DW\Define Country.Outputs[Derived Column Output]" />
                <path
                  refId="Package\2_AUS_Transport\Load to DW.Paths[Lookup No Match Output]"
                  endId="Package\2_AUS_Transport\Load to DW\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\2_AUS_Transport\Load to DW.Paths[OLE DB Source Output]"
                  endId="Package\2_AUS_Transport\Load to DW\Define Country.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\2_AUS_Transport\Load to DW\Staging DB.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\2_AUS_Transport\To get data to staging db"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{83EC8660-46F0-4160-824C-B164A1DA9B52}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="To get data to staging db"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input].Columns[LAT]"
                          cachedDataType="r8"
                          cachedName="LAT"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LAT]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input].Columns[LONG]"
                          cachedDataType="r8"
                          cachedName="LONG"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LONG]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input].Columns[Entrance_Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Entrance_Type"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Entrance_Type]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Latitude]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Latitude]"
                          name="Latitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LAT]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Longitude]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Longitude]"
                          name="Longitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LONG]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[EntranceType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[EntranceType]"
                          name="EntranceType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Entrance_Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\To get data to staging db\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">NSW_StationEntrances2018#csv$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Train_Station]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Train_Station]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Train_Station]"
                          name="Train_Station"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Street_Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Street_Name]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Street_Name]"
                          name="Street_Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Street_Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Street_Type]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Street_Type]"
                          name="Street_Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Entrance_Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Entrance_Type]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Entrance_Type]"
                          name="Entrance_Type"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LAT]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[LAT]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LAT]"
                          name="LAT"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LONG]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[LONG]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LONG]"
                          name="LONG"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Exit_Number]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Exit_Number]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Exit_Number]"
                          name="Exit_Number"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StateCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateCode]"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StateCode]"
                          name="StateCode"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StopID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[StopID]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StopID]"
                          name="StopID"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Train_Station]"
                          dataType="wstr"
                          length="255"
                          name="Train_Station" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Street_Name]"
                          dataType="wstr"
                          length="255"
                          name="Street_Name" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Street_Type]"
                          dataType="wstr"
                          length="255"
                          name="Street_Type" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Entrance_Type]"
                          dataType="wstr"
                          length="255"
                          name="Entrance_Type" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[LAT]"
                          dataType="r8"
                          name="LAT" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[LONG]"
                          dataType="r8"
                          name="LONG" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[Exit_Number]"
                          dataType="wstr"
                          length="255"
                          name="Exit_Number" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateCode]"
                          dataType="wstr"
                          length="255"
                          name="StateCode" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].ExternalColumns[StopID]"
                          dataType="r8"
                          name="StopID" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[StateCode]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[StateCode]"
                          name="StateCode" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[StopID]"
                          dataType="r8"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[StopID]"
                          name="StopID" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Train_Station]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Train_Station]"
                          name="Train_Station" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Street_Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Street_Name]"
                          name="Street_Name" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Street_Type]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Street_Type]"
                          name="Street_Type" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Entrance_Type]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Entrance_Type]"
                          name="Entrance_Type" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[LAT]"
                          dataType="r8"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[LAT]"
                          name="LAT" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[LONG]"
                          dataType="r8"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[LONG]"
                          name="LONG" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Exit_Number]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[Exit_Number]"
                          name="Exit_Number" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[AUS_Stations]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.Task1]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.Task1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StreetNumber]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="StreetNumber"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetNumber]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetNumber]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StreetName]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="StreetName"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetName]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetName]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Suburb]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Suburb"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suburb]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[Suburb]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PostCode]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="PostCode"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostCode]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[PostCode]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[State]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="State"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[State]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Exit_Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Exit_Number"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExitNumber]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Exit_Number]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Street_Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Street_Name"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StationName]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Street_Name]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LAT]"
                          cachedDataType="r8"
                          cachedName="LAT"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceLatitude]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LAT]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LONG]"
                          cachedDataType="r8"
                          cachedName="LONG"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceLongitude]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[LONG]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StopID]"
                          cachedDataType="r8"
                          cachedName="StopID"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StopID]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StopID]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EntranceType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EntranceType"
                          externalMetadataColumnId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceType]"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[EntranceType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetNumber]"
                          dataType="wstr"
                          length="10"
                          name="StreetNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StreetName]"
                          dataType="wstr"
                          length="100"
                          name="StreetName" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suburb]"
                          dataType="wstr"
                          length="100"
                          name="Suburb" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostCode]"
                          dataType="wstr"
                          length="10"
                          name="PostCode" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          dataType="wstr"
                          length="100"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceType]"
                          dataType="wstr"
                          length="100"
                          name="EntranceType" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExitNumber]"
                          dataType="i4"
                          name="ExitNumber" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StationName]"
                          dataType="wstr"
                          length="100"
                          name="StationName" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceLatitude]"
                          dataType="numeric"
                          name="EntranceLatitude"
                          precision="8"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntranceLongitude]"
                          dataType="numeric"
                          name="EntranceLongitude"
                          precision="9"
                          scale="6" />
                        <externalMetadataColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StopID]"
                          dataType="wstr"
                          length="10"
                          name="StopID" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\2_AUS_Transport\To get data to staging db\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="12">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using System.Net.Http;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Newtonsoft.Json;
using static SC_bb104a6ce7754e2aab597d67f8bdd55a.GoogleGeoCode;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    private HttpClient client = new HttpClient();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {

            HttpResponseMessage response = client.GetAsync($"https://maps.googleapis.com/maps/api/geocode/json?latlng={Row.Latitude.Trim()},{Row.Longitude.Trim()}&key=AIzaSyB_4lIINmxszcv9iuWIMV094iBV87CU9kw").Result;

            if (response.IsSuccessStatusCode)
            {

                var jsonString = response.Content.ReadAsStringAsync().Result;
                Rootobject rootObject = JsonConvert.DeserializeObject<Rootobject>(jsonString);
                var result = rootObject.results[1];

                if (result != null)
                {
                    Row.StreetNumber = result.address_components.Where(c => c.types.Contains("street_number")).FirstOrDefault()?.short_name;
                    Row.StreetName = result.address_components.Where(c => c.types.Contains("route")).FirstOrDefault()?.long_name;
                    Row.Suburb = result.address_components.Where(c => c.types.Contains("locality")).FirstOrDefault()?.long_name;
                    Row.PostCode = result.address_components.Where(c => c.types.Contains("postal_code")).FirstOrDefault()?.long_name;
                    Row.State = result.address_components.Where(c => c.types.Contains("administrative_area_level_1")).FirstOrDefault()?.long_name;
                    Row.Country = result.address_components.Where(c => c.types.Contains("country")).FirstOrDefault()?.long_name;
                }
            }

        }
        catch (Exception ex)
        {
            // TODO :; Find how to write into error output
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Latitude
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Latitude_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Longitude
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Longitude_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String TrainStation
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool TrainStation_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ExitNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool ExitNumber_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Double StopID
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[4]);
        }
    }
    public bool StopID_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String EntranceType
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool EntranceType_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String StreetNumber
    {
        set
        {
            this[6] = value;
        }
    }
    public bool StreetNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StreetName
    {
        set
        {
            this[7] = value;
        }
    }
    public bool StreetName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Suburb
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Suburb_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PostCode
    {
        set
        {
            this[9] = value;
        }
    }
    public bool PostCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[10] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Country
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Country_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bb104a6ce7754e2aab597d67f8bdd55a.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A512EB37-479E-4132-8AC5-493362079384}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bb104a6ce7754e2aab597d67f8bdd55a</RootNamespace>
    <AssemblyName>SC_bb104a6ce7754e2aab597d67f8bdd55a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\References\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="GoogleGeoCode.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Settings.get_Default():SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Sett" +
    "ings")]

namespace SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_bb104a6ce7754e2aab597d67f8bdd55a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_bb104a6ce7754e2aab597d67f8bdd55a</msb:DisplayName>
    <msb:ProjectId>{272EC762-A4B7-4648-9505-3F3C5C066E28}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_bb104a6ce7754e2aab597d67f8bdd55a.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="GoogleGeoCode.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bb104a6ce7754e2aab597d67f8bdd55a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bb104a6ce7754e2aab597d67f8bdd55a")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bb104a6ce7754e2aab597d67f8bdd55a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[GoogleGeoCode.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_bb104a6ce7754e2aab597d67f8bdd55a
{
    public class GoogleGeoCode
    {
        public class Rootobject
        {
            public Result[] results { get; set; }
        }

        public class Plus_Code
        {
            public string compound_code { get; set; }
            public string global_code { get; set; }
        }

        public class Result
        {
            public Address_Components[] address_components { get; set; }
            public string formatted_address { get; set; }
            public string[] postcode_localities { get; set; }
        }
        public class Address_Components
        {
            public string long_name { get; set; }
            public string short_name { get; set; }
            public string[] types { get; set; }
        }

    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bb104a6ce7754e2aab597d67f8bdd55a.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACMv8l8AAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAFkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMRFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAHCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD4
RQAAAAAAAEgAAAACAAUALCYAAOAeAAABAAAAAAAAAAxFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUACgIAAAEAABECewEAAAQb
jR4AAAElFnIBAABwoiUXA28GAAAGbxIAAAqiJRhydQAAcKIlGQNvCAAABm8SAAAKoiUacnkAAHCi
KBMAAApvFAAACm8VAAAKCgZvFgAACjmpAQAABm8XAAAKbxgAAApvGQAACigBAAArbzYAAAYXmgsH
OYYBAAADB28+AAAGfgoAAAQlLRcmfgkAAAT+BjAAAAZzGwAACiWACgAABCgCAAArKAMAACslLQQm
FCsFKEcAAAZvEgAABgMHbz4AAAZ+CwAABCUtFyZ+CQAABP4GMQAABnMbAAAKJYALAAAEKAIAACso
AwAAKyUtBCYUKwUoRQAABm8UAAAGAwdvPgAABn4MAAAEJS0XJn4JAAAE/gYyAAAGcxsAAAolgAwA
AAQoAgAAKygDAAArJS0EJhQrBShFAAAGbxYAAAYDB28+AAAGfg0AAAQlLRcmfgkAAAT+BjMAAAZz
GwAACiWADQAABCgCAAArKAMAACslLQQmFCsFKEUAAAZvGAAABgMHbz4AAAZ+DgAABCUtFyZ+CQAA
BP4GNAAABnMbAAAKJYAOAAAEKAIAACsoAwAAKyUtBCYUKwUoRQAABm8aAAAGAwdvPgAABn4PAAAE
JS0XJn4JAAAE/gY1AAAGcxsAAAolgA8AAAQoAgAAKygDAAArJS0EJhQrBShFAAAGbxwAAAbeAybe
ACoAAEEcAAAAAAAAAAAAAAYCAAAGAgAAAwAAABAAAAFKAnMeAAAKfQEAAAQCKCAAAAYqKgIDBAUo
HwAACipSAnsgAAAKAnshAAAKFpRvIgAACioiAhYoIwAACipSAnsgAAAKAnshAAAKF5RvIgAACioi
AhcoIwAACipSAnsgAAAKAnshAAAKGJRvIgAACioiAhgoIwAACipSAnsgAAAKAnshAAAKGZRvIgAA
CioiAhkoIwAACipSAnsgAAAKAnshAAAKGpRvJAAACioiAhooIwAACipSAnsgAAAKAnshAAAKG5Rv
IgAACioiAhsoIwAACiomAhwDKCUAAAoqWgMsCAIcKCYAAAoqctMAAHBzJwAACnomAh0DKCUAAAoq
WgMsCAIdKCYAAAoqctMAAHBzJwAACnomAh4DKCUAAAoqWgMsCAIeKCYAAAoqctMAAHBzJwAACnoq
Ah8JAyglAAAKKl4DLAkCHwkoJgAACipy0wAAcHMnAAAKeioCHwoDKCUAAAoqXgMsCQIfCigmAAAK
KnLTAABwcycAAAp6KgIfCwMoJQAACipeAywJAh8LKCYAAAoqctMAAHBzJwAACnoeAigoAAAKKh4C
KCkAAAoqfgIoKgAACgICcyQAAAZ9AgAABAICcyUAAAZ9AwAABCqSBHJwAQBwGm8rAAAKLBUCBQID
KCwAAAoOBHMFAAAGbyIAAAYqSisHAgNvIwAABgNvHgAABi3xKgYqOgIoLQAACgIDfQQAAAQqOgIo
LQAACgIDfQUAAAQqHgIoLQAACiqufgYAAAQtHnKAAQBw0AgAAAIoLgAACm8vAAAKczAAAAqABgAA
BH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAigxAAAKKi5zLAAABoAIAAAEKi5zLwAABoAJ
AAAEKkYDb0kAAAZy8gEAcCgEAAArKkYDb0kAAAZyDgIAcCgEAAArKkYDb0kAAAZyGgIAcCgEAAAr
KkYDb0kAAAZyLAIAcCgEAAArKkYDb0kAAAZyRAIAcCgEAAArKkYDb0kAAAZyfAIAcCgEAAArKh4C
exAAAAQqIgIDfRAAAAQqHgJ7EQAABCoiAgN9EQAABCoeAnsSAAAEKiICA30SAAAEKh4CexMAAAQq
IgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAABCoeAnsVAAAEKiICA30VAAAEKh4CexYAAAQqIgIDfRYA
AAQqHgJ7FwAABCoiAgN9FwAABCoeAnsYAAAEKiICA30YAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2
NC4wLjMwMzE5AAAAAAUAbAAAANAMAAAjfgAAPA0AAFgMAAAjU3RyaW5ncwAAAACUGQAAjAIAACNV
UwAgHAAAEAAAACNHVUlEAAAAMBwAALACAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYA
AAEAAAAoAAAADgAAABgAAABLAAAAKAAAADIAAAAsAAAAAQAAAAcAAAAkAAAALgAAAAMAAAABAAAA
BwAAAAEAAAAFAAAABAAAAAAAkgYBAAAAAAAGAIkFLAkGAB0GLAkGANUEGQkPAKAJAAAGAAIFIggG
AGwFIggGAE0FIggGAAQGIggGAKkFIggGAMIFIggGABkFIggGADQFWAYKAN0F+gMOAGgLkwgOAFoD
kwgGAEQIxAcGAJ0ELAkGACQLxAcGAI4AxAcKAOsI+gMSANwI+gMKAHsI+gMKAJgL+gMGALgEGQkG
APwITAkGAG8IDQgWAIgEfAYWAOkEfAYWAGYE5wcGAHUGxAcGAF8AWgoOALQLkwgaAN0LTggeAG4D
owgGAFEAaQEGADQIxAcGAF4IxAcGACcExAcGAIMDxAcGAEEMIggAAAAAEQEAAAAAAQABAAEAEADc
BwAAEAABAAEAAQAQAM8IAABRAAIABQABABAAegsAAF0AAgAgAAEAEACBCgAASQAEACQAAQAQAA4K
AABJAAUAJQABABAAyAItAUkABgAmAAAAEABTCd8JSQAGACcAAAEQAFEK3wl1AAgAKwADIRAAZQEA
AEkACQAuAAIAEAArCwAASQAQADYAAgAQAL4CAABJABEAOQACABAAYQsAAEkAEwA+AAIAEADRCgAA
SQAWAEUAAQBzCyEBBgCBCiUBBgAOCikBAQCICy0BAQCICy0BEQDQBzEBEQBWBDUBEQCuAjkBNgAN
AT0BFgABAEEBFgApAEEBFgBmAEEBFgCVAEEBFgC9AEEBFgDlAEEBAQBxAkoBAQCfAU8BAQC+AU8B
AQCKAlIBAQBOAk8BAQASAlcBAQDbAU8BAQD2AU8BAQA3AlcBUCAAAAAAxgA7BgYAAQBYIAAAAADG
AEYGBgABAGAgAAAAAMYAHgxbAQEAlCIAAAAAhhgMCQYAAgCnIgAAAACGGAwJnwACALIiAAAAAIYI
TQMiAAUAxyIAAAAAhggHB0IABQDQIgAAAACGCD8DIgAFAOUiAAAAAIYI8gZCAAUA7iIAAAAAhgj8
ByIABQADIwAAAACGCFoHQgAFAAwjAAAAAIYIwAgiAAUAISMAAAAAhgiKB0IABQAqIwAAAACGCBoB
YQEFAD8jAAAAAIYIugZCAAUASCMAAAAAhggbBCIABQBdIwAAAACGCDEHQgAFAGYjAAAAAIYIrwgQ
AAUAcCMAAAAAhghyB2UBBgCHIwAAAACGCKcDEAAHAJEjAAAAAIYIGwdlAQgAqCMAAAAAhghaARAA
CQCyIwAAAACGCMwGZQEKAMkjAAAAAIYI7gIQAAsA1CMAAAAAhgjeBmUBDADsIwAAAACGCH4EEAAN
APcjAAAAAIYISQdlAQ4ADyQAAAAAhghKDBAADwAaJAAAAACGCKAHZQEQADIkAAAAAIYANQxCABEA
OiQAAAAAhgA2C0IAEQBCJAAAAACGGAwJBgARAGIkAAAAAMYAEQxqAREAhyQAAAAAxgEKDFsBFQCa
JAAAAADGAR4MWwEWAJwkAAAAAIYYDAl0ARcAqyQAAAAAhhgMCXQBGAC6JAAAAACGGAwJBgAZALok
AAAAAIMYDAkGABkAwiQAAAAAkwj4CHoBGQDuJAAAAACTCD4EfwEZAPUkAAAAAJMISgSEARkA/SQA
AAAAlghCC4oBGgAEJQAAAACGGAwJBgAaAAwlAAAAAJEYEgmPARoAGCUAAAAAkRgSCY8BGgC6JAAA
AACGGAwJBgAaACQlAAAAAIMACgCTARoANiUAAAAAgwAyAJMBGwBIJQAAAACDAG8AkwEcAFolAAAA
AIMAngCTAR0AbCUAAAAAgwDGAJMBHgB+JQAAAACDAO4AkwEfAJAlAAAAAIYIuQqZASAAmCUAAAAA
hgjFCp8BIAC6JAAAAACGGAwJBgAhAKElAAAAAIYI+wIiACEAqSUAAAAAhggNAxAAIQCyJQAAAACG
CB8DIgAiALolAAAAAIYILwMQACIAuiQAAAAAhhgMCQYAIwDDJQAAAACGCOQKpgEjAMslAAAAAIYI
+wqsASMA1CUAAAAAhgiNCiIAJADcJQAAAACGCKMKEAAkAOUlAAAAAIYIrwmzASUA7SUAAAAAhgjH
CbgBJQC6JAAAAACGGAwJBgAmAPYlAAAAAIYIwAMiACYA/iUAAAAAhgjOAxAAJgAHJgAAAACGCNwD
IgAnAA8mAAAAAIYI6wMQACcAGCYAAAAAhggYCrMBKAAgJgAAAACGCCIKuAEoALokAAAAAIYYDAkG
ACkAAAABADkMAAABAPEIAAACACwKAAADAIkIAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIG
AAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABACUBAAACALYDAAAD
APEIAAAEAIkIAAABAPEIAAABADkMAAABAJ4LAAABAJ4LAAABAFIGAAABAJ0BAAABAJ0BAAABAJ0B
AAABAJ0BAAABAJ0BAAABAJ0BAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAABAFIGAAAB
AFIGAAABAFIGAAABAFIGCQAMCQEAEQAMCQYAGQAMCQoAKQAMCRAAMQAMCRAAOQAMCRAAQQAMCRAA
SQAMCRAAUQAMCRAAWQAMCRAAYQAMCRAAaQAMCQYAiQAMCQYAwQAMCQYA4QAMCRUAuQA7BgYAuQBG
BgYA8QDLByIA8QASCyYAcQCWASwADABdCz0AeQDWAkIAeQCoC0YAAQGEAUwAFABdCz0ACQEZC1oA
HAAMCW4AEQEsBHQAEQFOC5IAcQAMCQYAoQAMCZ8AoQDxCKkAoQAsCq0AqQByBrEAoQCsB7YAqQB5
A7sAoQC7B8AAoQCzBwEAIQEMCRAAoQA1DEIAoQA2C0IAuQAMCQYA8QBxCsYAuQBACs4AkQAMCQYA
MQGVA9QAMQE9DN0AyQAMCeMA6QAMCQYAEQF4CusALgALAOoBLgATAPMBLgAbABICLgAjABsCLgAr
AEQCLgAzAEQCLgA7AEQCLgBDABsCLgBLAEoCLgBTAEQCLgBbAGECQwBjAKsCAQFrAKsCAwFzAKsC
QwFrAKsCAQJrAKsCIQJrAKsCQQJrAKsCYQJrAKsCgQJrAKsCoQJrAKsCwQJrAKsC4QJrAKsCAQNr
AKsCKQN7ABICSQN7ABICwAZrAKsC4AZrAKsCIAdrAKsCQAdrAKsCYAdrAKsCgAdrAKsCwAdrAKsC
4AdrAKsCAAhrAKsCIAhrAKsCQAhrAKsCYAhrAKsCoAhrAKsCwAhrAKsC4AhrAKsCAAlrAKsCIAlr
AKsCQAlrAKsCGwADAAEACAAZAAkAGwALABwADAAdAA0AHwAOACIAAABRA74BAAALB8IBAABDA74B
AAD2BsIBAAAACL4BAABeB8IBAADECL4BAACOB8IBAAAeAcYBAAC+BsIBAAAfBL4BAAA1B8IBAACz
CL4BAAB2B8IBAACrA74BAAAfB8IBAABeAb4BAADQBsIBAADyAr4BAADiBsIBAACXBL4BAABNB8IB
AABODL4BAACkB8IBAAD8CMoBAABeBM8BAABVC9QBAADJCtkBAAARA74BAAAzA74BAAD/Ct8BAACn
Cr4BAADLCeUBAADSA74BAADvA74BAAAmCuUBAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsA
AgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUAAgAQABcAAgARABkAAQASABsAAQATAB0AAQAU
AB8AAQAVACEAAQAWACMAAQAXACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEA
AgAoADMAAgApADUAAQAqADUAAgArADcAAgA2ADkAAQA3ADkAAgA5ADsAAQA6ADsAAgA7AD0AAQA8
AD0AAgA+AD8AAQA/AD8AAgBAAEEAAQBBAEEAAgBCAEMAAQBDAEMAAgBFAEUAAQBGAEUAAgBHAEcA
AQBIAEcAAgBJAEkAAQBKAEkANgBUAGYABIAAAAEAAAAAAAAAAAAAAAAALQEAAAQAAAAAAAAAAAAA
AP0AUQEAAAAADwAAAAAAAAAAAAAABgHACwAAAAAEAAAAAAAAAAAAAAAPAZMIAAAAAA8AAAAAAAAA
AAAAAAYB6QsAAAAABAAAAAAAAAAAAAAA/QDEBwAAAAAMAAAAAAAAAAAAAAAYAU4IAAAAAAQAAAAA
AAAAAAAAAP0AMgQAAAAAAAAAAAEAAABdCQAACgACAAsABwAMAAcADQAHAA4ABwA1AGEAOQCNADsA
jQBlAPkAAAAAPD45X18zXzAAPElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+Yl9fM18wADw+OV9fM18x
ADxJbnB1dDBfUHJvY2Vzc0lucHV0Um93PmJfXzNfMQBJRW51bWVyYWJsZWAxAFRhc2tgMQA8Pjlf
XzNfMgA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18zXzIARnVuY2AyADw+OV9fM18zADxJbnB1
dDBfUHJvY2Vzc0lucHV0Um93PmJfXzNfMwA8PjlfXzNfNAA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dz5iX18zXzQAPD45X18zXzUAPElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+Yl9fM181ADw+OQA8TW9k
dWxlPgBnZXRfU3RvcElEAElucHV0SUQAU0NfYmIxMDRhNmNlNzc1NGUyYWFiNTk3ZDY3ZjhiZGQ1
NWEAbXNjb3JsaWIAc2V0X1N1YnVyYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVh
ZEFzU3RyaW5nQXN5bmMAR2V0QXN5bmMAPGNvbXBvdW5kX2NvZGU+a19fQmFja2luZ0ZpZWxkADxn
bG9iYWxfY29kZT5rX19CYWNraW5nRmllbGQAPGxvbmdfbmFtZT5rX19CYWNraW5nRmllbGQAPHNo
b3J0X25hbWU+a19fQmFja2luZ0ZpZWxkADxwb3N0Y29kZV9sb2NhbGl0aWVzPmtfX0JhY2tpbmdG
aWVsZAA8dHlwZXM+a19fQmFja2luZ0ZpZWxkADxmb3JtYXR0ZWRfYWRkcmVzcz5rX19CYWNraW5n
RmllbGQAPHJlc3VsdHM+a19fQmFja2luZ0ZpZWxkADxhZGRyZXNzX2NvbXBvbmVudHM+a19fQmFj
a2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5jZQBQbHVzX0NvZGUAR29vZ2xlR2VvQ29kZQBnZXRfSXNT
dWNjZXNzU3RhdHVzQ29kZQBzZXRfUG9zdENvZGUAZ2V0X2NvbXBvdW5kX2NvZGUAc2V0X2NvbXBv
dW5kX2NvZGUAZ2V0X2dsb2JhbF9jb2RlAHNldF9nbG9iYWxfY29kZQBnZXRfTG9uZ2l0dWRlAGdl
dF9MYXRpdHVkZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEVudW1lcmFibGUAR2V0RG91YmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9TdHJlZXROYW1lAElucHV0TmFtZQBn
ZXRfbG9uZ19uYW1lAHNldF9sb25nX25hbWUAZ2V0X3Nob3J0X25hbWUAc2V0X3Nob3J0X25hbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X0VudHJhbmNlVHlwZQBXaGVyZQBT
eXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UAc2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2JiMTA0YTZjZTc3NTRlMmFh
YjU5N2Q2N2Y4YmRkNTVhLmRsbABnZXRfU3RvcElEX0lzTnVsbABzZXRfU3VidXJiX0lzTnVsbABz
ZXRfUG9zdENvZGVfSXNOdWxsAGdldF9Mb25naXR1ZGVfSXNOdWxsAGdldF9MYXRpdHVkZV9Jc051
bGwAc2V0X1N0cmVldE5hbWVfSXNOdWxsAGdldF9FbnRyYW5jZVR5cGVfSXNOdWxsAHNldF9TdGF0
ZV9Jc051bGwAZ2V0X1RyYWluU3RhdGlvbl9Jc051bGwAc2V0X1N0cmVldE51bWJlcl9Jc051bGwA
Z2V0X0V4aXROdW1iZXJfSXNOdWxsAHNldF9Db3VudHJ5X0lzTnVsbABTZXROdWxsAHNldF9JdGVt
AFN5c3RlbQBUcmltAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
Z2V0X1RyYWluU3RhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAE5ld3RvbnNvZnQuSnNvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAFN5c3RlbS5OZXQuSHR0cABTeXN0
ZW0uTGlucQBzZXRfU3RyZWV0TnVtYmVyAGdldF9FeGl0TnVtYmVyAElucHV0MEJ1ZmZlcgBQaXBl
bGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IA
U3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVt
LlJlc291cmNlcwBTQ19iYjEwNGE2Y2U3NzU0ZTJhYWI1OTdkNjdmOGJkZDU1YS5Qcm9wZXJ0aWVz
LlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X3Bvc3Rjb2RlX2xvY2FsaXRp
ZXMAc2V0X3Bvc3Rjb2RlX2xvY2FsaXRpZXMAU0NfYmIxMDRhNmNlNzc1NGUyYWFiNTk3ZDY3Zjhi
ZGQ1NWEuUHJvcGVydGllcwBWYXJpYWJsZXMAZ2V0X3R5cGVzAHNldF90eXBlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLlRocmVhZGluZy5UYXNr
cwBFcXVhbHMAQ29udGFpbnMAQ29ubmVjdGlvbnMAZ2V0X2Zvcm1hdHRlZF9hZGRyZXNzAHNldF9m
b3JtYXR0ZWRfYWRkcmVzcwBnZXRfcmVzdWx0cwBzZXRfcmVzdWx0cwBBZGRyZXNzX0NvbXBvbmVu
dHMAZ2V0X2FkZHJlc3NfY29tcG9uZW50cwBzZXRfYWRkcmVzc19jb21wb25lbnRzAENvbmNhdABE
ZXNlcmlhbGl6ZU9iamVjdABSb290b2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AEZpcnN0
T3JEZWZhdWx0AGdldF9SZXN1bHQASHR0cENsaWVudABjbGllbnQAVXNlckNvbXBvbmVudABQYXJl
bnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9Db250ZW50AEh0dHBDb250ZW50AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQASnNvbkNvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5l
eHRSb3cAZ2V0X0Fzc2VtYmx5AHNldF9Db3VudHJ5AAAAAHNoAHQAdABwAHMAOgAvAC8AbQBhAHAA
cwAuAGcAbwBvAGcAbABlAGEAcABpAHMALgBjAG8AbQAvAG0AYQBwAHMALwBhAHAAaQAvAGcAZQBv
AGMAbwBkAGUALwBqAHMAbwBuAD8AbABhAHQAbABuAGcAPQAAAywAAFkmAGsAZQB5AD0AQQBJAHoA
YQBTAHkAQgBfADQAbABJAEkATgBtAHgAcwB6AGMAdgA5AGkAdQBXAEkATQBWADAAOQA0AGkAQgBW
ADgANwBDAFUAOQBrAHcAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBu
AG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEA
IAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAu
AAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGIAYgAxADAANABhADYAYwBlADcANwA1ADQAZQAyAGEA
YQBiADUAOQA3AGQANgA3AGYAOABiAGQAZAA1ADUAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAG3MAdAByAGUAZQB0AF8AbgB1AG0AYgBlAHIAAAtyAG8AdQB0AGUA
ABFsAG8AYwBhAGwAaQB0AHkAABdwAG8AcwB0AGEAbABfAGMAbwBkAGUAADdhAGQAbQBpAG4AaQBz
AHQAcgBhAHQAaQB2AGUAXwBhAHIAZQBhAF8AbABlAHYAZQBsAF8AMQAAD2MAbwB1AG4AdAByAHkA
APWCZtkS771DimtbCTnyCKEABCABAQgDIAABBSABARERBCABAQ4FIAEBEW0GBwISPRI0AyAADgUA
AQ4dDgkgARUSfQESPQ4GFRJ9ARI9BCAAEwADIAACBSAAEoCBByAAFRJ9AQ4FFRJ9AQ4GEAEBHgAO
BAoBEiwHFRJNAhI4AgUgAgEcGBgQAQIVEoCNAR4AFRKAjQEeABUSTQIeAAIECgESOAwQAQEeABUS
gI0BHgAJIAMBElUdCBJZAwYSVQMGHQgEIAEOCAQgAQIIBCABDQgFIAIBCBwHIAICDhGAlQUgAR0I
CAgAARKAmRGAnQUgABKAoQcgAgEOEoChDRABAgIVEoCNAR4AHgADCgEOCLd6XFYZNOCJCImEXc2A
gMyRCLA/X38R1Qo6CDCtT+aypq7tAwYSOQMGEhQDBhIYAwYSXQMGEmUDBhJpAwYSJAMGEigIBhUS
TQISOAIEBh0SNAIGDgQGHRI4AwYdDgUgAQESDAMgAA0EIAEBAgkgBAEIDhJVElkFIAEBEl0EAAAS
ZQQAABJpBQABARJpBAAAEiQDAAABBSABAhI4BSAAHRI0BiABAR0SNAUgAB0SOAYgAQEdEjgEIAAd
DgUgAQEdDgMoAA4DKAACAygADQQIABJlBAgAEmkECAASJAUoAB0SNAUoAB0SOAQoAB0OCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19iYjEwNGE2
Y2U3NzU0ZTJhYWI1OTdkNjdmOGJkZDU1YQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOxFAAAAAAAAAAAAAAZGAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAD4RQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGIA
YgAxADAANABhADYAYwBlADcANwA1ADQAZQAyAGEAYQBiADUAOQA3AGQANgA3AGYAOABiAGQAZAA1
ADUAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgBiADEAMAA0AGEANgBjAGUANwA3
ADUANABlADIAYQBhAGIANQA5ADcAZAA2ADcAZgA4AGIAZABkADUANQBhAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAyADAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiAGIAMQAwADQAYQA2
AGMAZQA3ADcANQA0AGUAMgBhAGEAYgA1ADkANwBkADYANwBmADgAYgBkAGQANQA1AGEALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgBiADEAMAA0AGEANgBj
AGUANwA3ADUANABlADIAYQBhAGIANQA5ADcAZAA2ADcAZgA4AGIAZABkADUANQBhAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAYNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bb104a6ce7754e2aab597d67f8bdd55a</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">2F</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[Latitude]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Latitude"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[Longitude]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Longitude"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[Longitude]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[Train_Station]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Train_Station"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Train_Station]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[Exit_Number]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Exit_Number"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[Exit_Number]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[StopID]"
                          cachedDataType="r8"
                          cachedName="StopID"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output].Columns[StopID]" />
                        <inputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0].Columns[EntranceType]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="EntranceType"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output].Columns[EntranceType]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetNumber]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetNumber]"
                          name="StreetNumber" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetName]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[StreetName]"
                          name="StreetName" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[Suburb]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[Suburb]"
                          name="Suburb" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[PostCode]"
                          dataType="wstr"
                          length="10"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[PostCode]"
                          name="PostCode" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[State]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[Country]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0].Columns[Country]"
                          name="Country" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\2_AUS_Transport\To get data to staging db.Paths[Data Conversion Output]"
                  endId="Package\2_AUS_Transport\To get data to staging db\Script Component.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\2_AUS_Transport\To get data to staging db.Paths[Excel Source Output]"
                  endId="Package\2_AUS_Transport\To get data to staging db\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\2_AUS_Transport\To get data to staging db\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\2_AUS_Transport\To get data to staging db.Paths[Output 0]"
                  endId="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\2_AUS_Transport\To get data to staging db\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\2_AUS_Transport.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{209CC8DF-8225-4B0F-B20D-BC0F75826C1B}"
          DTS:From="Package\2_AUS_Transport\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\2_AUS_Transport\To get data to staging db" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\2_AUS_Transport.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{B10B7281-BA5C-4E68-A0FD-B291CE1CA707}"
          DTS:From="Package\2_AUS_Transport\To get data to staging db"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\2_AUS_Transport\Load to DW" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\2_AUS_Transport\Execute SQL Task"
          TopLeft="85.5,32" />
        <NodeLayout
          Size="134,42"
          Id="Package\2_AUS_Transport\Load to DW"
          TopLeft="100,218" />
        <NodeLayout
          Size="199,42"
          Id="Package\2_AUS_Transport\To get data to staging db"
          TopLeft="73.5,120" />
        <EdgeLayout
          Id="Package\2_AUS_Transport.PrecedenceConstraints[Constraint]"
          TopLeft="170,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2_AUS_Transport.PrecedenceConstraints[Constraint 1]"
          TopLeft="170,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="317,305"
          Size="317,348"
          Id="Package\2_AUS_Transport"
          TopLeft="166,58" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\2_AUS_Transport\Load to DW">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\2_AUS_Transport\Load to DW\OLE DB Destination"
          TopLeft="505,323" />
        <NodeLayout
          Size="236,42"
          Id="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries"
          TopLeft="475,228" />
        <NodeLayout
          Size="149,42"
          Id="Package\2_AUS_Transport\Load to DW\Define Country"
          TopLeft="522,157" />
        <NodeLayout
          Size="131,42"
          Id="Package\2_AUS_Transport\Load to DW\Staging DB"
          TopLeft="523,78" />
        <EdgeLayout
          Id="Package\2_AUS_Transport\Load to DW.Paths[Lookup No Match Output]"
          TopLeft="591.75,270">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,16.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2_AUS_Transport\Load to DW.Paths[Derived Column Output]"
          TopLeft="594.75,199">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2_AUS_Transport\Load to DW.Paths[OLE DB Source Output]"
          TopLeft="588.5,120">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8,37"
              Start="0,0"
              End="8,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5"
                    Point2="0,18.5"
                    Point3="4,18.5" />
                  <mssgle:LineSegment
                    End="4,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4,18.5"
                    Point2="8,18.5"
                    Point3="8,22.5" />
                  <mssgle:LineSegment
                    End="8,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\2_AUS_Transport\Load to DW\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\2_AUS_Transport\Load to DW\Lookup for new Transport entries">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DimTransport]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\2_AUS_Transport\Load to DW\Staging DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\2_AUS_Transport\To get data to staging db">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination"
          TopLeft="291,363" />
        <NodeLayout
          Size="163,42"
          Id="Package\2_AUS_Transport\To get data to staging db\Script Component"
          TopLeft="300,285" />
        <NodeLayout
          Size="139,42"
          Id="Package\2_AUS_Transport\To get data to staging db\Excel Source"
          TopLeft="309,129" />
        <NodeLayout
          Size="156,42"
          Id="Package\2_AUS_Transport\To get data to staging db\Data Conversion"
          TopLeft="305,208" />
        <EdgeLayout
          Id="Package\2_AUS_Transport\To get data to staging db.Paths[Output 0]"
          TopLeft="379,327">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2_AUS_Transport\To get data to staging db.Paths[Excel Source Output]"
          TopLeft="380.75,171">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\2_AUS_Transport\To get data to staging db.Paths[Data Conversion Output]"
          TopLeft="382.25,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\2_AUS_Transport\To get data to staging db\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\2_AUS_Transport\To get data to staging db\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>